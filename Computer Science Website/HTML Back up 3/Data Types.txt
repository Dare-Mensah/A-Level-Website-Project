<DOCTYPE html>
<html>


<head>
	<title> Chapter 6 Data Types</title>
	<link rel="stylesheet" href="Components Background.css">
</head>
<body>
 
	<h1>Binary Revision</h1>
<hr>
	<h2>Normalisation</h2>
	<p>For negative binary numbers it should be represented as 10 but for positive binary numbers the representation should be 01</p>
<hr>
	<h2>Floating Point Binary</h2>
	<p>The disadvatge with normal non-floating point binary is that it is only limited to integers, this is where floating point binary comes in. This allows for much more denary numbers to be represented in binary.</p>
<hr>
	<h2>Addition and Subtraction</h2>
	<p>With addition binary some of the rules that need to be remembered is that:</p>
	<ul>
	<li>1+1=10</li>
	<li>1+0=1</li>
	<li>0+0=0</li>
	<li>1+1+1=11</li>
	</ul>
	<p>With Subtraction in binary the most common way is converting the second number that is being subtracted 
	form the first to a negative number through twos complement</p>
<hr>
	<h2>Sign and Magnitude</h2>
	<p>With sign and magnitude the way to make a positive binary number to a 
	negative number is to add one to the left most bit. However the main disadvatage of using Sign and Magnitude is that it cant be used in arithmetic such as taking away two binary numbers.</p>
<hr>
	<h2>Twos Complement</h2>
	<p>In Twos Complement the way to conert a positive binary number to a 
	negative one would be to swap the numbers so if its an 8 bit number such as 10111010 it would be then be 01000101 then you would have to add 1 to the right bit that now being 01000110.</p>
<hr>
	<h2>Primitive Data Types</h2>
	<p>A primitive data type is one which is provided by a programming language. They include:
<ul>
	<li>Integer - A whole such as -25,0,3</li>
	<li>Real/Float - A number with a fractional part such as -13.5, 0.0, 3.142</li>
	<li>Boolean - A boolean variable can only take the value TRUE or False</li>
	<li>Character - A letter, number or special character typically represented in ASCII, such as 
	a, A, 4, %. 
	<li>String - Anything enclosed in quote marks is a string, for example "Peter" , "123". Either 
	single or double quptes are acceptable.</li>
</ul>
<hr>
	<h2>Number Bases</h2>
	<p>Our familiar decimal (or denary) number system uses the numbers 0 through 9 and therefore has a base of 10.</p>
	<p>Binary uses only the numbers 0 and 1 and has a base of 2.</p>
	<p>Hexadeciaml uses a base of 16 with numbers 0-9 and letters A to F.</p>
<hr>	
	<h2>Converting from denary to binary</h2>
	<p>To convert a denary number to binary, first write headings of 1,2,4,8....128 from right to left. (If the number is greater than 255, continue writing headings</p>
	<p>To convert a denary number, for example 73, into binary, write a 1 under the largest heading less than 73 (i.e.64). You now have 73-64 = 9 remaining, to be converetd to binary. 9 = 8+1 so put 1 under 8 and under 1. Fill the spaces with zeros. The binary number representing 73 is 01001001.</p>
<hr>
	<h2>Fixed Point Binary Numbers</h2>
	<p>Fixed point binary numbers can be a useful way to represent fractions in binary. A Binary point is used to separate the whole place values from the fractional part.</p>

</body>
</html>
	





